name: Production Deployment

on:
  workflow_dispatch:

defaults:
  run:
    working-directory: ./

jobs:
  check-branch:
    runs-on: ubuntu-22.04
    steps:
      - name: Check branch
        if: github.event_name == 'workflow_dispatch' && github.ref != 'refs/heads/main'
        run: |
          echo "This workflow should not be triggered with workflow_dispatch on a branch other than main."
          exit 1

  deploy-weather-bot:
    needs: check-branch
    runs-on: ubuntu-latest
    environment:
      name: prod
    env:
      APP_NAME: weather_bot
      BUILD_ENV: prod

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup environment variables
        run: |
          chmod +x ./scripts/setup-backend
          ./scripts/setup-backend
        env:
          OPEN_GOV_ENDPOINT: ${{ secrets.OPEN_GOV_ENDPOINT }}

          # Redis settings
          REDIS_CACHE_HOST: ${{ secrets.REDIS_CACHE_HOST }}
          REDIS_CACHE_PORT: ${{ secrets.REDIS_CACHE_PORT }}
          REDIS_CACHE_TTL_MS: ${{ secrets.REDIS_CACHE_TTL_MS }}
          REDIS_CACHE_DB: ${{ secrets.REDIS_CACHE_DB }}
          REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}

          # PostgresSQL
          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}

          # SQLAlchemy connection pool config
          DB_ECHO: ${{ vars.DB_ECHO }}
          DB_POOL_SIZE: ${{ vars.DB_POOL_SIZE }}
          DB_MAX_OVERFLOW: ${{ vars.DB_MAX_OVERFLOW }}
          DB_POOL_RECYCLE_SECONDS: ${{ vars.DB_POOL_RECYCLE_SECONDS }}
          DB_POOL_TIMEOUT_SECONDS: ${{ vars.DB_POOL_TIMEOUT_SECONDS }}
          DB_POOL_PRE_PING: ${{ vars.DB_POOL_PRE_PING }}

          # S3 bucket settings
          MINIO_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
          MINIO_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}
          MINIO_ENDPOINT: ${{ secrets.MINIO_ENDPOINT }}

          # Telegram bot settings
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_ENDPOINT: ${{ secrets.TELEGRAM_ENDPOINT }}

      - name: Login to GitHub Container Registry
        run: docker login ghcr.io -u ${{ secrets.DOCKER_GH_USER }} -p ${{ secrets.DOCKER_GH_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: "Build, Tag, Push latest"
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./backend/docker/${{ env.APP_NAME }}/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/waitingonalice/${{ env.APP_NAME }}:latest
          build-args: |
            APP_NAME=${{ env.APP_NAME }}
            BUILD_ENV=${{ env.BUILD_ENV }}
